openapi: 3.0.3
info:
  title: WxMCP-Server-API
  version: "1.4.0"
  description: |
    WxMCP-Server-API provides endpoints for managing MCP operations and handling secrets.
servers:
  - url: https://api.example.com
paths:
  /mcp:
    post:
      summary: MCP Operation
      description: |
        Initiates an MCP operation using either API Key or OAuth2 authentication.
        All parameters are passed as HTTP headers.
        The request and response follow the JSON-RPC 2.0 structure.
      parameters:
        - name: auth_type
          in: header
          required: false
          schema:
            type: string
            enum: [API_KEY, OAUTH]
          description: The authentication method to use. If not set the global variable "wxmcp.auth.type" is read, if this is also not set an exception is thrown
        - name: tool_header_prefix
          in: header
          required: false
          schema:
            type: string
          description: The prefix added to header properties in the input schema of the tool. If not set global variable "wxmcp.tool.header.prefix" is read, if this is also not set, it is set to "header_" by default
        - name: tool_query_prefix
          in: header
          required: false
          schema:
            type: string
          description: The prefix added to query properties in the input schema of the tool. If not set global variable "wxmcp.tool.query.prefix" is read, if this is also not set, it is set to "query_" by default
        - name: tool_path_prefix
          in: header
          required: false
          schema:
            type: string
          description: The prefix added to path parameter properties in the input schema of the tool. If not set global variable "wxmcp.tool.path.prefix" is read, if this is also not set, it is set to "path_" by default
        - name: tool_response_mode
          in: header
          required: false
          schema:
            type: string
            enum: [structured, text, both]
          description: The structure of the tool responses (actual JSON properties or stringified "text" property). If not set global variable "wxmcp.tool.response.mode" is read, if this is also not set, it is set to "both" by default
        - name: response_code
          in: header
          required: false
          schema:
            type: string
            enum: [stdio, http]
          description: If set to "stdio" HTTP response (including error messages) always return response code "200", in case of "http" actual codes are sent bank (i.e. 404, 401). If not set global variable "wxmcp.response.code" is read, if this is also not set, it is set to "stdio" by default
        - name: tool_catalog_base_url
          in: header
          required: false
          schema:
            type: string
            format: uri
          description: Base URL for the tool catalog API on API Gateway. If not set the global variable "wxmcp.tool.catalog.base.url" is read, if this is also not set an exception is thrown
        - name: api_key_headername
          in: header
          required: false
          schema:
            type: string
          description: HTTP header name for the API Key (required if auth_type is API_KEY).If not set the global variable "wxmcp.api.key.headername " is read, if this is also not set an exception is thrown
        - name: api_key
          in: header
          required: false
          schema:
            type: string
          description: The API Key value (required if auth_type is "API_KEY").
        - name: oauth_bearer_token
          in: header
          required: false
          schema:
            type: string
          description: Bearer token for OAuth2 authentication (required if auth_type is "OAUTH").
        - name: oauth_token_url
          in: header
          required: false
          schema:
            type: string
            format: uri
          description: Token URL for the Identity Provider (required if auth_type is OAUTH).
        - name: oauth_client_id
          in: header
          required: false
          schema:
            type: string
          description: OAuth2 client identifier (required if auth_type is OAUTH).
        - name: oauth_audience
          in: header
          required: false
          schema:
            type: string
          description: Audience value for OAuth2 (required if auth_type is OAUTH).
        - name: oauth_scopes
          in: header
          required: false
          schema:
            type: string
          description: White-space separated list of OAuth2 scopes (required if auth_type is OAUTH).
        - name: oauth_granttype
          in: header
          required: false
          schema:
            type: string
            enum: [client_credentials, authorization_code]
          description: OAuth2 grant type (required if auth_type is OAUTH).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonRpcRequest'
            example:
              jsonrpc: "2.0"
              id: 1
              method: "doSomething"
              params:
                key: value
      responses:
        '200':
          description: Successful MCP operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonRpcResponse'
              examples:
                success:
                  summary: Example JSON-RPC 2.0 response
                  value:
                    jsonrpc: "2.0"
                    id: 2
                    result:
                      status: "ok"
                      data: {}
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonRpcErrorResponse'
              example:
                jsonrpc: "2.0"
                id: 3
                error:
                  code: -32602
                  message: "Unknown tool: invalid_tool_name"
        '404':
          description: Resource or method not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonRpcErrorResponse'
              example:
                jsonrpc: "2.0"
                id: 3
                error:
                  code: -32602
                  message: "Unknown tool: invalid_tool_name"
        '500':
          description: Internal server error during MCP processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonRpcErrorResponse'
              example:
                jsonrpc: "2.0"
                id: 3
                error:
                  code: -32602
                  message: "Unknown tool: invalid_tool_name"
        '401':
          description: Unauthorized
components:
  schemas:
    JsonRpcRequest:
      type: object
      required: [jsonrpc, id, method, params]
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
          description: JSON-RPC protocol version.
        id:
          type: integer
          description: Request identifier.
        method:
          type: string
          description: Name of the method to be invoked.
        params:
          type: object
    JsonRpcResponse:
      type: object
      required: [jsonrpc, id]
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
          description: JSON-RPC protocol version.
        id:
          type: integer
          description: Response identifier.
        result:
          type: object
        error:
          type: object
    JsonRpcErrorResponse:
      type: object
      required: [jsonrpc, id, error]
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
          description: JSON-RPC protocol version.
        id:
          type: integer
          description: Response identifier.
        error:
          type: object
          required: [code, message]
          properties:
            code:
              type: integer
              description: JSON-RPC error code.
            message:
              type: string
              description: Error message.
    SecretRequest:
      type: object
      properties:
        secret:
          type: string
      required:
        - secret
    SecretResponse:
      type: object
      properties:
        status:
          type: string
