{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "title": "ListToolsResponse",
    "description": "The server's response to a tools/list request from the client.",
    "properties": {
        "_meta": { "$ref": "#/definitions/_meta" },
        "nextCursor": {
            "description": "An opaque token representing the pagination position after the last returned result.\nIf present, there may be more results available.",
            "type": "string"
        },
        "tools": {
            "items": {
                "$ref": "#/definitions/Tool"
            },
            "type": "array"
        }
    },
    "required": [
        "tools"
    ],
    "definitions": {
		"_meta": {
	      "type": "object",
	      "description": "See [General fields: `_meta`](/specification/2025-06-18/basic/index#meta) for notes on `_meta` usage.",
	      "additionalProperties": {}
	    },
	    "properties": {
	      "type": "object",
	      "additionalProperties": {
	        "type": "object",
	        "properties": {},
	        "additionalProperties": true
	      }
	    },
        "Tool": {
            "description": "Definition for a tool the client can call.",
            "properties": {
                "_meta": { "$ref": "#/definitions/_meta" },
                "annotations": {
                    "$ref": "#/definitions/ToolAnnotations",
                    "description": "Optional additional tool information.\n\nDisplay name precedence order is: title, annotations.title, then name."
                },
                "description": {
                    "description": "A human-readable description of the tool.\n\nThis can be used by clients to improve the LLM's understanding of available tools. It can be thought of like a \"hint\" to the model.",
                    "type": "string"
                },
                "inputSchema": {
                    "description": "A JSON Schema object defining the expected parameters for the tool.",
                    "properties": {
                        "properties": { "$ref": "#/definitions/properties" },
                        "required": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "type": {
                            "const": "object",
                            "type": "string"
                        }
                    },
                    "required": [
                        "type"
                    ],
                    "type": "object"
                },
                "name": {
                    "description": "Intended for programmatic or logical use, but used as a display name in past specs or fallback (if title isn't present).",
                    "type": "string"
                },
                "outputSchema": {
                    "description": "An optional JSON Schema object defining the structure of the tool's output returned in\nthe structuredContent field of a CallToolResult.",
                    "properties": {
                        "properties": { "$ref": "#/definitions/properties" },
                        "required": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "type": {
                            "const": "object",
                            "type": "string"
                        }
                    },
                    "required": [
                        "type"
                    ],
                    "type": "object"
                },
                "title": {
                    "description": "Intended for UI and end-user contexts â€” optimized to be human-readable and easily understood,\neven by those unfamiliar with domain-specific terminology.\n\nIf not provided, the name should be used for display (except for Tool,\nwhere `annotations.title` should be given precedence over using `name`,\nif present).",
                    "type": "string"
                }
            },
            "required": [
                "inputSchema",
                "name"
            ],
            "type": "object"
        },
        "ToolAnnotations": {
            "description": "Additional properties describing a Tool to clients.\n\nNOTE: all properties in ToolAnnotations are **hints**.\nThey are not guaranteed to provide a faithful description of\ntool behavior (including descriptive properties like `title`).\n\nClients should never make tool use decisions based on ToolAnnotations\nreceived from untrusted servers.",
            "properties": {
                "destructiveHint": {
                    "description": "If true, the tool may perform destructive updates to its environment.\nIf false, the tool performs only additive updates.\n\n(This property is meaningful only when `readOnlyHint == false`)\n\nDefault: true",
                    "type": "boolean"
                },
                "idempotentHint": {
                    "description": "If true, calling the tool repeatedly with the same arguments\nwill have no additional effect on the its environment.\n\n(This property is meaningful only when `readOnlyHint == false`)\n\nDefault: false",
                    "type": "boolean"
                },
                "openWorldHint": {
                    "description": "If true, this tool may interact with an \"open world\" of external\nentities. If false, the tool's domain of interaction is closed.\nFor example, the world of a web search tool is open, whereas that\nof a memory tool is not.\n\nDefault: true",
                    "type": "boolean"
                },
                "readOnlyHint": {
                    "description": "If true, the tool does not modify its environment.\n\nDefault: false",
                    "type": "boolean"
                },
                "title": {
                    "description": "A human-readable title for the tool.",
                    "type": "string"
                }
            },
            "type": "object"
        }
    }
}